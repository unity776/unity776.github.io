<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Xan的博客</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-12-18T18:19:10.979Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>SolitaryXan</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>godot日志</title>
    <link href="http://example.com/2022/11/09/godot%E6%97%A5%E8%AE%B001/"/>
    <id>http://example.com/2022/11/09/godot%E6%97%A5%E8%AE%B001/</id>
    <published>2022-11-08T16:08:01.626Z</published>
    <updated>2022-12-18T18:19:10.979Z</updated>
    
    <content type="html"><![CDATA[<h1 id="godot第一篇"><a href="#godot第一篇" class="headerlink" title="godot第一篇"></a>godot第一篇</h1><h2 id="1-人物的行走"><a href="#1-人物的行走" class="headerlink" title="1.人物的行走"></a>1.人物的行走</h2><p>需要设置的常量：</p><pre><code>const FRICTION = 500 #摩擦力const ACCELERATION = 500 # 加速度const MAX_SPEED = 100</code></pre><p>定义速度：</p><pre><code>var velocity = Vector2.ZERO</code></pre><p>准备函数：</p><pre><code>func _ready():    pass </code></pre><p>行走的代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">func _physics_process(delta):</span><br><span class="line"> var input_vector = Vector2.ZERO</span><br><span class="line"></span><br><span class="line">input_vector.x = Input.get_action_strength(&quot;ui_right&quot;) - Input.get_action_strength(&quot;ui_left&quot;)</span><br><span class="line">input_vector.y = Input.get_action_strength(&quot;ui_down&quot;) - Input.get_action_strength(&quot;ui_up&quot;)</span><br><span class="line">input_vector = input_vector.normalized()</span><br><span class="line"></span><br><span class="line">if input_vector != Vector2.ZERO:</span><br><span class="line">velocity = velocity.move_toward(input_vector * MAX_SPEED, ACCELERATION * delta)</span><br><span class="line">else:</span><br><span class="line">velocity = velocity.move_toward(Vector2.ZERO, FRICTION * delta)</span><br><span class="line"></span><br><span class="line">#move_and_collide(velocity * delta) 不能处理墙壁的滑动</span><br><span class="line">velocity = move_and_slide(velocity) #自动处理delta</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><font color=#0099ff size=4 face="黑体">其中 move_and_slide()方法需要其节点为 kinematicBody2D</font></p><h2 id="2-人物行走动画"><a href="#2-人物行走动画" class="headerlink" title="2.人物行走动画"></a>2.人物行走动画</h2><p>获取节点：</p><pre><code>onready var animationPlayer = $AnimationPlayer #在节点加载完成时，初始化</code></pre><p>利用if,else定义动画：代码复杂！</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">if input_vector != Vector2.ZERO:</span><br><span class="line">if input_vector.x &gt; 0:</span><br><span class="line">animationPlayer.play(&quot;RunRight&quot;)</span><br><span class="line">else:</span><br><span class="line">animationPlayer.play(&quot;RunLeft&quot;)</span><br><span class="line">velocity = velocity.move_toward(input_vector * MAX_SPEED, ACCELERATION * delta)</span><br><span class="line">else:</span><br><span class="line">animationPlayer.play(&quot;IdleRight&quot;)</span><br><span class="line">elocity = velocity.move_toward(Vector2.ZERO, FRICTION * delta)</span><br></pre></td></tr></table></figure><h2 id="3-为角色创建动画"><a href="#3-为角色创建动画" class="headerlink" title="3.为角色创建动画"></a>3.为角色创建动画</h2><ol><li>使用 AnimatedSprite节点<br>  添加AnimatedSprite节点，在动画里添加你需要的动画组，并将相应的动画帧添加到相应的组中。<br>  在主节点的脚本里启用动画使用<br>  <code>$AnimatedSprite.play()</code><br>  <code>$AnimatedSprite.stop()</code><br>  来开启和结束所需要的动画。$ 后面跟的是你AnimatedSprite所在的路径。</li><li>使用 AnimationPlayer<br>NULL</li></ol><h2 id="4-为角色选择相应的动画"><a href="#4-为角色选择相应的动画" class="headerlink" title="4 为角色选择相应的动画"></a>4 为角色选择相应的动画</h2><p>  使用代码  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">if input_vector.x != 0:</span><br><span class="line">  $AnimatedSprite.animation = &quot;walk&quot;</span><br><span class="line">  $AnimatedSprite.flip_v = false</span><br><span class="line">  $AnimatedSprite.flip_h = input_vector.x &lt; 0</span><br><span class="line">elif input_vector.y != 0:</span><br><span class="line">  $AnimatedSprite.animation = &quot;up&quot;</span><br><span class="line">  $AnimatedSprite.flip_v = input_vector.y &gt; 0</span><br></pre></td></tr></table></figure><p>  其中 $AnimatedSprite.animation &#x3D; “walk” 后面是你在AnimatedSprite中创建的动画组名称。  </p><p><font color=#0099ff size=4 face="黑体">该方法有一个问题，当角色先向下移动，动画方向是向下，接着左右移动是动画又会从新变成向上。因为我们只有两组动画。使用AnimationPlayer可以解决这个问题</font></p><h2 id="5-创建敌人的动画"><a href="#5-创建敌人的动画" class="headerlink" title="5 创建敌人的动画"></a>5 创建敌人的动画</h2><p>敌人使用的是RigidBody2D 节点，动画使用Animatedsprite,添加相应的动画<br>添加碰撞，使用CollisionShape2D节点。<br>添加VisibilityNotifier2D节点，通过其screen_exited()信号使超出屏幕的敌人消失。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">func _on_VisibilityNotifier2D_screen_exited():</span><br><span class="line">  queue_free()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="6-生成不同类型的敌人"><a href="#6-生成不同类型的敌人" class="headerlink" title="6 生成不同类型的敌人"></a>6 生成不同类型的敌人</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">func _ready():</span><br><span class="line">$AnimatedSprite.playing = true</span><br><span class="line">var mob_types = $AnimatedSprite.frames.get_animation_names()</span><br><span class="line">$AnimatedSprite.animation = mob_types[randi() % mob_types.size()]</span><br></pre></td></tr></table></figure><h2 id="7-敌人生成路径"><a href="#7-敌人生成路径" class="headerlink" title="7 敌人生成路径"></a>7 敌人生成路径</h2><p>使用Path2D 与PathFollow2D 节点</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">var mob_spawn_location = get_node(&quot;MobPath/MobSpawnLocation&quot;)</span><br><span class="line">mob_spawn_location.offset = randi()</span><br><span class="line">var direction = mob_spawn_location.rotation + PI / 2</span><br><span class="line">mob.position = mob_spawn_location.position</span><br><span class="line">direction += rand_range(-PI / 4, PI / 4)</span><br><span class="line">mob.rotation = direction</span><br><span class="line">var velocity = Vector2(rand_range(150.0, 250.0), 0.0)</span><br><span class="line">mob.linear_velocity = velocity.rotated(direction)</span><br><span class="line">add_child(mob)</span><br></pre></td></tr></table></figure><h2 id="8-角色生成地点"><a href="#8-角色生成地点" class="headerlink" title="8 角色生成地点"></a>8 角色生成地点</h2><p>使用Position2D 节点</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$Player.start($StartPosition.position)</span><br></pre></td></tr></table></figure><p>Play场景里：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">func start(pos):</span><br><span class="line">position = pos</span><br><span class="line">show()</span><br><span class="line">$Area2D/CollisionShape2D.disabled = false</span><br></pre></td></tr></table></figure><h2 id="9-重新开始游戏清楚敌人"><a href="#9-重新开始游戏清楚敌人" class="headerlink" title="9 重新开始游戏清楚敌人"></a>9 重新开始游戏清楚敌人</h2><p>将敌人场景分成一组<br>使用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">get_tree().call_group(&quot;mobs&quot;, &quot;queue_free&quot;)</span><br></pre></td></tr></table></figure><h2 id="10-HUD"><a href="#10-HUD" class="headerlink" title="10 HUD"></a>10 HUD</h2><p>使用CanvasLayer 节点<br>可以添加Label与Button节点用来显示信息与点击按钮<br>其中  </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yield($MessageTimer, &quot;timeout&quot;)</span><br></pre></td></tr></table></figure><p>代表等待计时器计时完成</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;godot第一篇&quot;&gt;&lt;a href=&quot;#godot第一篇&quot; class=&quot;headerlink&quot; title=&quot;godot第一篇&quot;&gt;&lt;/a&gt;godot第一篇&lt;/h1&gt;&lt;h2 id=&quot;1-人物的行走&quot;&gt;&lt;a href=&quot;#1-人物的行走&quot; class=&quot;header</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://example.com/2022/10/18/hello-world/"/>
    <id>http://example.com/2022/10/18/hello-world/</id>
    <published>2022-10-17T17:37:32.570Z</published>
    <updated>2022-10-17T17:37:32.570Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
